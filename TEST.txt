function buildTable2(data) {
  const myArray = data;
  const table = document.getElementById("myTable");

  // Clear existing table content
  while (table.firstChild) {
    table.removeChild(table.firstChild);
  }

  // Create the table header row
  const headerRow = document.createElement("tr");
  for (const key in myArray[0]) {
    if (myArray[0].hasOwnProperty(key)) {
      const headerCell = document.createElement("th");
      headerCell.textContent = key;
      headerRow.appendChild(headerCell);
    }
  }
  table.appendChild(headerRow);

  // Create a single row for display
  const displayRow = document.createElement("tr");
  for (const key in myArray[0]) {
    if (myArray[0].hasOwnProperty(key)) {
      const cell = document.createElement("td");
      cell.innerHTML = myArray[0][key]; // Display data from the first object
      displayRow.appendChild(cell);
    }
  }
  table.appendChild(displayRow);

  // Create a button to scroll through the remaining rows
  const scrollButton = document.createElement("button");
  scrollButton.textContent = "Scroll";
  let currentIndex = 1; // Start with the second row

  scrollButton.addEventListener("click", () => {
    if (currentIndex < myArray.length) {
      const newRow = document.createElement("tr");
      for (const key in myArray[currentIndex]) {
        if (myArray[currentIndex].hasOwnProperty(key)) {
          const cell = document.createElement("td");
          cell.innerHTML = myArray[currentIndex][key];
          newRow.appendChild(cell);
        }
      }
      table.appendChild(newRow);
      currentIndex++;
    } else {
      scrollButton.disabled = true; // Disable the button when all rows are displayed
    }
  });

  table.appendChild(scrollButton);
}






2D arrays können gecalled werden mittels myArray[x][y]
Object Arrays können gecalled werden mit dem Object (0 bis ....) und den Key sprich dem Schlüssel argument: data[0].Bearbeitungsdauert

      console.log(Object.entries(data));
      console.log(Object.keys(data[1]));
      console.log(
        Object.keys(data),
        Object.values(data),
        Object.keys(data[1]),
        Object.values(data[1])
      );